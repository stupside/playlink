import { FastifySchema, RequestGenericInterface } from "fastify";

import { Static, Type } from "@sinclair/typebox";

import { PLAYLINK_TOKEN_HEADER_KEY } from "../../../fastify";

const Body = Type.Object({
  key: Type.String({
    description: "The key contained in the session QRCode.",
  }),
  code: Type.String({ description: "The code bound to the QRCode." }),
  name: Type.String({
    description: "The name of the device.",
    default: "anonyme",
  }),
});

const Reply = Type.Object({
  value: Type.String({
    description: `The client '${PLAYLINK_TOKEN_HEADER_KEY}' token.`,
  }),
  device: Type.Number({ description: "The id of the device" }),
  session: Type.Number({ description: "The id of the session" }),
});

export interface Interface extends RequestGenericInterface {
  Body: Static<typeof Body>;
  Reply: Static<typeof Reply>;
}

export const Schema: FastifySchema = {
  tags: ["devices"],
  description:
    "Generate a token for a session from a code generated by the host. Use this token to call push messages to the host.",
  body: Body,
  response: {
    200: Reply,
  },
};
